% python

# Check python version
python3 --version

# Make a request using the request library
python -c "import requests; r = requests.get('<url>'); print (r.status_code)"

% conda

# Conda show configs
conda config --show

# Conda install
conda install -v <package>

# Conda env config
connda env config vars set export <env_var_key>='<env_value>'

# Conda env create
conda env create -v -n test -f <env-file>

# Conda activate
conda activate <env>

# Conda env list
conda env config vars list

# Conda set env var
conda env config vars set <SOME_ENV_VAR>=<SOME_ENV_VALUE>

# Conda unset env var
conda env config vars unset <SOME_ENV_VAR>

% pip

# List configuration location
pip config list -v

# pip upgrade package
python3 -m pip install --upgrade <package>

# pip upgrade self
python -m pip install --upgrade pip setuptools

# Pip list
pip3 list

# Pip uninstall
pip3 uninstall <package>

# Pip install from git
pip3 install git+https://<url> --upgrade --force

% autopep8

# Format file in place manually
autopep8 --in-place <file>

% venv

# Start a venv
python3 -m venv venv

# venv activate
source venv/bin/activate

% unittest

# Run test
python3 -m unittest

% http

# web server
python3 -m http.server

# httpwatcher - live web server that updates
httpwatcher

% pyenv

# pyenv - List versions of Python we can install, omit anything below 8
pyenv install --list | grep " 3\.[891]" | less

# pyenv - install python version
pyenv install <version>

# pyenv - list installed versions
pyenv versions

# pyenv - Set active python version
pyenv global <version>

# jupyter notebook
jupyter notebook --ip=0.0.0.0 --port=8080

% Django

# Django start project
django-admin startproject <project_name>
