% git

# initial commit - Because I use this so much...
git commit -a -m "Initial"

# Git config global username and email
git config --global user.name <first_last> && git config --global user.email <email>

# Git config global default branch - Use main as default.
git config --global init.defaultBranch main

# Git config list
git config --list

# Display file contents from git hash
git cat-file -p <SHA>

# Display the type of file from git hash
git cat-file -t <SHA>

# Git log graph
git log --all --decorate --graph

# Git rebase abort
git rebase --abort

# Git rebase continue
git rebase --continue

# Git rebase
git rebase <branch>

# Setup repo called "bare"
git init --bare bare-repo

# Clone bare repo to newrepo
git clone bare-repo newrepo

# Submodule init
git submodule update --init

# Git add -e, --edit 
git add -e

# Git unstage all files
git reset --

# Git unstage specific file
git reset -- <file>

# Git checkout commit into it's own branch
git branch <branch-name> <commit-id>

# Git checkout file back to the state before modifications
git checkout -- <file>

# Remove file from repo but keep on it on disk. Useful if you forgot to add to .gitignore
git rm <file> --cache

# Git reset --mixed
git reset --mixed

# Git reset --hard
git reset --hard

# Git reset --hard to a commit
git reset --hard <commit_sha>

# Git stash
git stash

# Git stash list - List stashes
git stash list

# Git stash pop - Reapply changes
git stash pop

# Git Squash - reset head x # of commits
git reset --soft HEAD~<num>

# Git remote -v
git remote -v

# Git switch - Checkout/switch to existing branch
git switch

# Git create new branch equiv to git checkout -b <new_branch>
git switch -c <branch>

# Git fetch dev:dev branch without having to check it out
git fetch origin dev:dev

# Git delete remote branch - You should delete the branch locally before this
git push origin :<branch-to-delete>

# Git restore - Restore  or pull in a file from another branch
git restore --source=<branch> <file>

$ branch: git branch | awk '{print $NF}'
$ commit_sha: git log --pretty=format:"%h   %an   %ar   %s" --- --column 1
