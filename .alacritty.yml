env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 140
    lines: 45

  padding:
    x: 1
    y: 1

  decorations: none

  # Window title
  title: a

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    family: SauceCodePro Nerd Font
    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
    family: SauceCodePro Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    family: SauceCodePro Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: SauceCodePro Nerd Font Mono
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    family: SauceCodePro Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size, this is what is known as the font size
  size: 16.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Colors (Tomorrow Night Bright)
colors:
  # Default colors
  primary:
    background: '0x282c34'
    foreground: '0xbbc2cf'

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not present.
    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # is `false`, the normal foreground color will be used.
    #dim_foreground: '0x9a9a9a'
    #bright_foreground: '0xffffff'

  # Cursor colors
  #
  # Colors which should be used to draw the terminal cursor. If these are unset,
  # the cursor color will be the inverse of the cell color.
  cursor:
    text: '0x000000'
    cursor: '0xffffff'

  # Selection colors
  #
  # Colors which should be used to draw the selection area. If selection
  # background is unset, selection color will be the inverse of the cell colors.
  # If only text is unset the cell text color will remain the same.
  selection:
    text: '0xbbc2cf'
    background: '0x282c34'

  # Normal colors
  normal:
    black:   '0x1c1f24'
    red:     '0xff6c6b'
    green:   '0x98be65'
    yellow:  '0xda8548'
    blue:    '0x51afef'
    magenta: '0xc678dd'
    cyan:    '0x5699af'
    white:   '0x202328'

  # Bright colors
  bright:
    black:   '0x5b6268'
    red:     '0xda8548'
    green:   '0x4db5bd'
    yellow:  '0xecbe7b'
    blue:    '0x3071db'   # This is 2257a0 in Doom Emacs but I lightened it.
    magenta: '0xa9a1e1'
    cyan:    '0x46d9ff'
    white:   '0xdfdfdf'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0
# background_opacity: 0.95

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
dynamic_title: false

cursor:
  style: Block

# Live config reload (changes require restart)
live_config_reload: true

shell:
  program: /bin/bash
  args:
    - -l
    - -c
    - "tmux attach || tmux new -s main"

alt_send_esc: true

# Use xxd -psd to get chars code, need this because alt_send_esc doesn't seem to be doing anything...
# xdd -psd will return a string like 1b620a, Split this up to 1b, 62, and 0a, the 0a is the return character. So skip it.
key_bindings:
    #Get alt/option + b to jump back a character
  - { key: B, mods: Alt, chars: "\x1b\x62"}
    #Get alt/option + f to jump back a character
  - { key: F, mods: Alt, chars: "\xc6\x20"}
    #Create a new tmux pane
  - { key: T, mods: Command, chars: "\x01\x63"}
    #Kill a new tmux pane
  - { key: W, mods: Command, chars: "\x01\x78"}
    #Emulate iterm Command + Shift + D to split horizontal in tmux
  - { key: D, mods: Command|Shift, chars: "\x01\x2d"}
    #Emulate iterm Command + D vertical split in tmux
  - { key: D, mods: Command, chars: "\x01\x7c"}
    #Jump to window 1 with cmd + 1
  - { key: Key1, mods: Command, chars: "\x01\x31" }
    #Jump to window 2 with cmd + 2
  - { key: Key2, mods: Command, chars: "\x01\x32" }
    #Jump to window 3 with cmd + 3
  - { key: Key3, mods: Command, chars: "\x01\x33" }
    #Jump to window 4 with cmd + 4
  - { key: Key4, mods: Command, chars: "\x01\x34" }
    #Jump to window 5 with cmd + 5
  - { key: Key5, mods: Command, chars: "\x01\x35" }
    #Jump to window 6 with cmd + 6
  - { key: Key6, mods: Command, chars: "\x01\x36" }
    #Jump to window 7 with cmd + 7
  - { key: Key7, mods: Command, chars: "\x01\x37" }
    #Go fullscreen! It's level 9000!
  - { key: Return, mods: Command, action: ToggleFullScreen }
