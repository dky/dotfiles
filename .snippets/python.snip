snippet #!
   #!/usr/bin/env python

# Sample nested dictionary

snippet samplenestdic
   students = {
        "Peter": {"age": 10, "address": "Lisbon"},
        "Isabel": {"age": 11, "address": "Sesimbra"},
        "Anna": {"age": 9, "address": "Lisbon"}
   }

# Sample dictionary

snippet sampledict
   ages = {
        "Peter": 10,
        "Isabel": 11,
        "Anna": 9,
        "Thomas": 10,
        "Bob": 10,
        "Joseph": 11,
        "Maria": 12,
        "Gabriel": 10
   }

# Sample list

snippet samplelist
   list_ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

snippet et
   ${1} = (${2})

snippet el
   ${1} = [${2}]

snippet ed
   ${1} = {}
   ${2}

# Dictionaries

snippet di
   dict[${1}] ${2}

snippet dg
   dict.get(${1}, 0)

snippet wh
   while ${1:condition}:
      ${2:# code...}

# For loops

snippet fori
   for ${1} in ${2}:
      ${3}

snippet forir
   for ${1} in range(${2}):
      ${3}

snippet forirl
   for ${1} in range(len(${2})):
      ${3}

snippet enum
   for i, item in enumerate(list_):
      ${1}

# Print

snippet pr
  print(${1}

snippet prt
  print(${1})

# Conditionals

snippet ifnm
   if __name__ == "__main__":

# Functions

snippet dis
   def __init__(self${1}):
    ${2}

snippet dss
   def __str__(self${1}):
    ${2}

snippet df
   def ${1}(${2}):
    ${3}

snippet cls
   class ${1}(${2}):
    ${3}

snippet dfs
   def __str__(self${1}):
    ${2}

snippet prty
   print(type(${1}))

# Docstring

snippet dstr
    """
    ${1}
    """
    ${2}

# SQLAlchemy

snippet sacs
   sa.Column(sa.String)

snippet _name
   __name__

# List functions

snippet rev
   reverse(${1}):

# Strings

# Print string slice
snippet pss
   print(${1}[${2}:${3}]
